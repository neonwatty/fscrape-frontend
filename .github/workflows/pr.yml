name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  lint-and-format:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting
        run: |
          echo "🎨 Checking code formatting..."
          npm run format:check || (echo "❌ Code formatting issues found. Run 'npm run format' to fix." && exit 1)

      - name: Run linter
        run: |
          echo "🔍 Running linter..."
          npm run lint

      - name: Type check
        run: |
          echo "📝 Running type check..."
          npm run type-check

  test-coverage:
    name: Test Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: |
          echo "🧪 Running tests with coverage..."
          npm run test:coverage || true

      - name: Comment test results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = '📊 Test coverage report will be available after implementation';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: coverage
            });

  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: |
          echo "🏗️ Building preview..."
          npm run build
        env:
          NODE_ENV: development

      - name: Validate build
        run: |
          echo "✅ Validating build output..."
          node scripts/validate-export.js

      - name: Upload preview artifacts
        uses: actions/upload-artifact@v4
        with:
          name: preview-build
          path: out/
          retention-days: 3

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high

  pr-labels:
    name: PR Labels
    runs-on: ubuntu-latest

    steps:
      - name: Label PR
        uses: actions/labeler@v5
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          configuration-path: .github/labeler.yml
