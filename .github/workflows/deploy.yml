name: Deploy to GitHub Pages

on:
  # Trigger after CI tests complete successfully (GitHub Actions only)
  workflow_run:
    workflows: ["CI Tests"]
    types:
      - completed
    branches: [main]
  
  # Allow manual deployment (works with both GitHub Actions and act)
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip waiting for tests (use for local testing with act)'
        required: false
        default: false
        type: boolean
  
  # For local testing with act - can be triggered directly
  push:
    branches: [main]
    paths: ['.github/workflows/deploy.yml']  # Only trigger on deploy config changes

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

env:
  NODE_VERSION: '22'

jobs:
  build:
    name: Build for Production
    runs-on: ubuntu-latest
    timeout-minutes: 30
    # Run if: tests passed, manual trigger, or local testing
    if: |
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'push' && contains(github.event.head_commit.message, '[deploy]'))

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .next/cache
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: |
          echo "üèóÔ∏è Building application for production..."
          npm run build:prod
          echo "‚úÖ Build completed successfully"
        env:
          NODE_ENV: production
          NEXT_PUBLIC_BASE_PATH: /fscrape-frontend
          NEXT_PUBLIC_ASSET_PREFIX: /fscrape-frontend

      - name: Validate export
        run: |
          echo "üîç Validating static export..."
          node scripts/validate-export.js --github-pages
          echo "‚úÖ Export validation passed"

      - name: Generate deployment info
        run: |
          echo "üìä Deployment Information"
          echo "========================"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Time: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          echo ""
          echo "Build Size:"
          du -sh out/
          echo ""
          echo "Files count:"
          find out -type f | wc -l

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
